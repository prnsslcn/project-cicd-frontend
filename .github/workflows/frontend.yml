name: React CI/CD

# 트리거 : PUSH, PR(Pull Request) 이벤트 발생 시 작동, 브랜치는 main
# 만약 프론트엔드, 백엔드 통합 시 특정디렉토리가 업데이트될 때 반영해라 등 세부 조건 추가 가능
on:
  push:
    branch:
      - main
  pull_request:
    branch:
      - main
        
# 해야할 일
jobs:
  react-deploy:
    runs-on: ubuntu-latest
    steps:
      # 체크아웃 -> github의 저장소로부터 소스 체크아웃
      - name: Checkout repository resource
        uses: actions/checkout@v2

      # 환경변수 동적 생성 -> .env 파일 생성(ec2 정보 세팅), 기존코드 수정(보안)
      - name: .env 환경 변수 동적 생성
        run: |
          echo "${{ secrets.CLIENT_ENV }}" > .env
          pwd
          ls -al

      # 빌드를 위한 조건 -> nodejs 설치
      - name: NodeJS 설치
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      # npm install 라이브러리 설치
      - name: install 독립 라이브러리
        run: npm install

      # 단위 테스트 -> 생략
      # - name: 단위테스트
      #   run: npm test

      # 빌드
      - name: 빌드
        run: |
          npm run build
          ls ./build

      # 빌드의 결과물을 EC2 업로드
      # 대상 위치에 존재하는 모든 리소스 -> EC2의 ~/client 하위에 복사해라
      - name: EC2에 빌드된 파일/폴더 업로드
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: ./build/*
          target: /home/ubuntu/client


      # 뒷정리 (업로드 결과 -> nginx의 root로 이동(설정), 디렉토리 정리)